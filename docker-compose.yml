version: '3'

services:
  webserver:
    image: nginx:stable-alpine
    container_name: lcp_nginx
    restart: unless-stopped
    ports:
      - '${APP_PORT:-80}:80'
      # - "8080:80"
    volumes: 
      - .:/var/www/html
      - ./dockerize/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
      - php
      - mysql
    networks:
      - laradocker
  mysql:
    image: mysql:8.0.33
    container_name: lcp_mysql
    restart: unless-stopped
    tty: true
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
      # - "33061:3306"
    environment: 
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes: 
      - ./dockerize/mysql/data:/var/lib/mysql
      - ./dockerize/mysql/my.conf:/etc/mysql/conf.d/mysql-custom.conf
    networks:
      - laradocker
  php:
    build:
      context: .
      dockerfile: ./dockerize/app/php.dockerfile
    container_name: lcp_php
    volumes: 
      - .:/var/www/html
    ports: 
      - "9000:9000"
    networks:
      - laradocker
  composer:
    image: composer:latest
    container_name: lcp_composer
    volumes: 
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on: 
      - php
    networks:
      - laradocker
  npm:
    image: node:20.2
    container_name: lcp_npm
    volumes: 
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
  artisan:
    build: 
      context: .
      dockerfile: ./dockerize/app/php.dockerfile
    container_name: lcp_artisan
    volumes: 
      - .:/var/www/html
    depends_on: 
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laradocker
networks:
  laradocker:
    # driver: bridge